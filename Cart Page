<script lang="ts">
	import { cart } from '$lib/stores/Cartstores.js';
	
	let cartItems = $state([]);
	
	// Calculate the total price of items in the cart
	let total = $derived(
		cartItems.reduce((sum, item) => sum + item.price, 0).toFixed(2)
	);
	
	// Initialize cart items from the store
	$effect(() => {
		cartItems = [...$cart];
	});
	
	// Remove an item from the cart
	function removeItem(id: number) {
		cart.update(items => items.filter(item => item.id !== id));
	}
	
	// Update quantity (not implemented in the current store model)
	function updateQuantity(id: number, quantity: number) {
		// For now, this is just a placeholder
		// In a real app, you would update the quantity in the cart store
		alert(`Updated quantity for item ${id} to ${quantity}`);
	}
	
	// Checkout function
	function checkout() {
		// In a real app, this would navigate to a checkout page or process the order
		alert('Proceeding to checkout!');
		
		// Clear the cart after checkout
		// cart.set([]);
	}
</script>

<svelte:head>
	<title>Your Cart | Sky Walkers</title>
	<meta name="description" content="Review and checkout your selected items from Sky Walkers." />
</svelte:head>

<div class="bg-gray-100 py-8">
	<div class="container mx-auto px-4">
		<h1 class="text-3xl font-bold mb-8">Your Shopping Cart</h1>
		
		{#if cartItems.length > 0}
			<div class="bg-white rounded-lg shadow-md overflow-hidden mb-8">
				<table class="w-full">
					<thead class="bg-gray-50">
						<tr>
							<th class="py-3 px-4 text-left">Product</th>
							<th class="py-3 px-4 text-left">Details</th>
							<th class="py-3 px-4 text-right">Price</th>
							<th class="py-3 px-4 text-center">Action</th>
						</tr>
					</thead>
					<tbody class="divide-y divide-gray-200">
						{#each cartItems as item (item.id)}
							<tr>
								<td class="py-4 px-4">
									<div class="flex items-center">
										<div class="h-16 w-16 flex-shrink-0 bg-gray-200 rounded-md mr-4 flex items-center justify-center">
											<!-- Placeholder for product image -->
											üëü
										</div>
										<div>
											<h3 class="font-medium">{item.name}</h3>
										</div>
									</div>
								</td>
								<td class="py-4 px-4">
									<div class="text-sm text-gray-600">
										<p>Size: {item.size}</p>
										<p>Color: {item.color}</p>
									</div>
								</td>
								<td class="py-4 px-4 text-right">
									<span class="font-medium">${item.price.toFixed(2)}</span>
								</td>
								<td class="py-4 px-4 text-center">
									<button
										on:click={() => removeItem(item.id)}
										class="text-red-500 hover:text-red-700"
									>
										Remove
									</button>
								</td>
							</tr>
						{/each}
					</tbody>
					<tfoot class="bg-gray-50">
						<tr>
							<td colspan="2" class="py-4 px-4 text-right font-bold">Total:</td>
							<td class="py-4 px-4 text-right font-bold">${total}</td>
							<td></td>
						</tr>
					</tfoot>
				</table>
			</div>
			
			<div class="flex justify-between items-center">
				<a href="/products" class="text-sky-600 hover:text-sky-800">
					<span class="mr-1">‚Üê</span> Continue Shopping
				</a>
				
				<button
					on:click={checkout}
					class="bg-sky-600 text-white px-6 py-3 rounded-md hover:bg-sky-700 transition duration-200"
				>
					Proceed to Checkout
				</button>
			</div>
		{:else}
			<div class="bg-white p-8 rounded-lg shadow-md text-center">
				<div class="text-6xl mb-4">üõí</div>
				<h2 class="text-2xl font-semibold mb-4">Your cart is empty</h2>
				<p class="text-gray-600 mb-6">Looks like you haven't added any products to your cart yet.</p>
				
				
					href="/products"
					class="inline-block bg-sky-600 text-white px-6 py-3 rounded-md hover:bg-sky-700 transition duration-200"
				>
					Start Shopping
				</a>
			</div>
		{/if}
	</div>
</div>
